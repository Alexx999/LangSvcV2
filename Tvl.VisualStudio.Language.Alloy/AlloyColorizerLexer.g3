lexer grammar AlloyColorizerLexer;

options {
    language=CSharp3;
    TokenLabelType=CommonToken;
}

@namespace{Tvl.VisualStudio.Language.Alloy}

//LET		: 'let';
//ALL		: 'all';
//NO		: 'no';
//SOME	: 'some';
//LONE	: 'lone';
//ONE		: 'one';
//SET		: 'set';
//SEQ		: 'seq';
//SUM		: 'sum';
//IN		: 'in';
//ELSE	: 'else';
//PRIVATE	: 'private';
//MODULE	: 'module';
OR		: '||';
IFF		: '<=>';
IMPLIES	: '=>';
AND		: '&&';
NOT		: '!';
EQ		: '=';
LT		: '<';
GT		: '>';
LE		: '<=';
GE		: '>=';
NEQ		: '!=';
NLT		: '!<';
NGT		: '!>';
NLE		: '!<=';
NGE		: '!>=';
LSHIFT	: '<<';
RSHIFT	: '>>';
RROTATE	: '>>>';
PLUS	: '+';
MINUS	: '-';
COUNT	: '#';
INC		: '++';
BITAND	: '&';
MAP		: '->';
LC		: '<:';
GC		: ':>';
LBRACK	: '[';
RBRACK	: ']';
DOT		: '.';
TILDE	: '~';
STAR	: '*';
CARET	: '^';

IDENTIFIER
	:	('a'..'z' | 'A'..'Z' | '_')
		('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*
	;

INTEGER
	:	'0'..'9'+
	;

WS
	:	' ' | '\t'
	;

NEWLINE
	:	'\r' '\n'?
	|	'\n'
	;

COMMENT
	:	('//'|'--') ~('\r'|'\n')*
	;

ML_COMMENT
	:	'/*' .* '*/'
	;

ANY_CHAR
	:	.
	;
