lexer grammar AlloyColorizerLexer;

options {
    language=CSharp3;
    TokenLabelType=CommonToken;
}

@namespace{Tvl.VisualStudio.Language.Alloy}
@modifier{internal}
@ctorModifier{private}

LPAREN		: '(';
RPAREN		: ')';
LBRACE		: '{';
RBRACE		: '}';
LBRACK		: '[';
RBRACK		: ']';
LT			: '<';
GT			: '>';
LE			: '=<';
GE			: '>=';
SLASH		: '/';
COLON		: ':';
COMMA		: ',';
NOT			: '!';
COUNT		: '#';
AND			: '&&';
BITAND		: '&';
STAR		: '*';
PLUS		: '+';
MINUS		: '-';
OVERRIDE	: '++';
ARROW		: '->';
DOT			: '.';
LSHIFT		: '<<';
RSHIFT		: '>>';
RROTATE		: '>>>';
IFF			: '<=>';
DOMAIN_RES	: '<:';
RANGE_RES	: ':>';
EQ			: '=';
IMPLIES		: '=>';
AT			: '@';
CARET		: '^';
BAR			: '|';
OR			: '||';
TILDE		: '~';

IDENTIFIER
	:	('a'..'z' | 'A'..'Z' | '_')
		('a'..'z' | 'A'..'Z' | '_' | '0'..'9' | '\'' | '"')*
	;

INTEGER
	:	'0'..'9'+
	;

WS
	:	(' ' | '\t')*
	;

NEWLINE
	:	'\r' '\n'?
	|	'\n'
	;

COMMENT
	:	('//'|'--') ~('\r'|'\n')*
	;

ML_COMMENT
	:	'/*' CONTINUE_COMMENT {$type = state.type;}
	;

fragment END_COMMENT : ;

fragment
CONTINUE_COMMENT
	:	(	~('\r'|'\n'|'*')
		|	{input.LA(2) != '/'}? => '*'
		)*
		(	'*/' {state.type = END_COMMENT;}
		|	{state.type = CONTINUE_COMMENT;}
		)
	;

ANY_CHAR
	:	.
	;
