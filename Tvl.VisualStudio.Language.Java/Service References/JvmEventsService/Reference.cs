//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tvl.VisualStudio.Language.Java.JvmEventsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JvmEventType", Namespace="http://schemas.datacontract.org/2004/07/Tvl.Java.DebugHost")]
    public enum JvmEventType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VMInit = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VMDeath = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThreadStart = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThreadEnd = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassFileLoadHook = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassLoad = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassPrepare = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VMStart = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exception = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExceptionCatch = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SingleStep = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FramePop = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Breakpoint = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FieldAccess = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FieldModification = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MethodEntry = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MethodExit = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NativeMethodBind = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompiledMethodLoad = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompiledMethodUnload = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DynamicCodeGenerated = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataDumpRequest = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataResetRequest = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MonitorWait = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MonitorWaited = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MonitorContendedEnter = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MonitorContendedEntered = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceExhausted = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GarbageCollectionStart = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GarbageCollectionFinish = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ObjectFree = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VMObjectAlloc = 84,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JvmVirtualMachineRemoteHandle", Namespace="http://schemas.datacontract.org/2004/07/Tvl.Java.DebugHost.Services")]
    [System.SerializableAttribute()]
    public partial struct JvmVirtualMachineRemoteHandle : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long HandleField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long Handle {
            get {
                return this.HandleField;
            }
            set {
                if ((this.HandleField.Equals(value) != true)) {
                    this.HandleField = value;
                    this.RaisePropertyChanged("Handle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JvmThreadRemoteHandle", Namespace="http://schemas.datacontract.org/2004/07/Tvl.Java.DebugHost.Services")]
    [System.SerializableAttribute()]
    public partial struct JvmThreadRemoteHandle : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long HandleField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long Handle {
            get {
                return this.HandleField;
            }
            set {
                if ((this.HandleField.Equals(value) != true)) {
                    this.HandleField = value;
                    this.RaisePropertyChanged("Handle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JvmRemoteLocation", Namespace="http://schemas.datacontract.org/2004/07/Tvl.Java.DebugHost.Services")]
    [System.SerializableAttribute()]
    public partial struct JvmRemoteLocation : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MethodField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Location {
            get {
                return this.LocationField;
            }
            set {
                if ((this.LocationField.Equals(value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Method {
            get {
                return this.MethodField;
            }
            set {
                if ((this.MethodField.Equals(value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JvmClassRemoteHandle", Namespace="http://schemas.datacontract.org/2004/07/Tvl.Java.DebugHost.Services")]
    [System.SerializableAttribute()]
    public partial struct JvmClassRemoteHandle : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long HandleField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long Handle {
            get {
                return this.HandleField;
            }
            set {
                if ((this.HandleField.Equals(value) != true)) {
                    this.HandleField = value;
                    this.RaisePropertyChanged("Handle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JvmEventsService.IJvmEventsService", CallbackContract=typeof(Tvl.VisualStudio.Language.Java.JvmEventsService.IJvmEventsServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IJvmEventsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJvmEventsService/Subscribe", ReplyAction="http://tempuri.org/IJvmEventsService/SubscribeResponse")]
        void Subscribe(Tvl.VisualStudio.Language.Java.JvmEventsService.JvmEventType eventType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJvmEventsService/Unsubscribe", ReplyAction="http://tempuri.org/IJvmEventsService/UnsubscribeResponse")]
        void Unsubscribe(Tvl.VisualStudio.Language.Java.JvmEventsService.JvmEventType eventType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJvmEventsServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJvmEventsService/OnSingleStep", ReplyAction="http://tempuri.org/IJvmEventsService/OnSingleStepResponse")]
        void OnSingleStep(Tvl.VisualStudio.Language.Java.JvmEventsService.JvmVirtualMachineRemoteHandle virtualMachine, Tvl.VisualStudio.Language.Java.JvmEventsService.JvmThreadRemoteHandle thread, Tvl.VisualStudio.Language.Java.JvmEventsService.JvmRemoteLocation location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJvmEventsService/HandleVMStart", ReplyAction="http://tempuri.org/IJvmEventsService/HandleVMStartResponse")]
        void HandleVMStart(Tvl.VisualStudio.Language.Java.JvmEventsService.JvmVirtualMachineRemoteHandle virtualMachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJvmEventsService/HandleVMInitialization", ReplyAction="http://tempuri.org/IJvmEventsService/HandleVMInitializationResponse")]
        void HandleVMInitialization(Tvl.VisualStudio.Language.Java.JvmEventsService.JvmVirtualMachineRemoteHandle virtualMachine, Tvl.VisualStudio.Language.Java.JvmEventsService.JvmThreadRemoteHandle thread);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJvmEventsService/HandleVMDeath", ReplyAction="http://tempuri.org/IJvmEventsService/HandleVMDeathResponse")]
        void HandleVMDeath(Tvl.VisualStudio.Language.Java.JvmEventsService.JvmVirtualMachineRemoteHandle virtualMachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJvmEventsService/HandleThreadStart", ReplyAction="http://tempuri.org/IJvmEventsService/HandleThreadStartResponse")]
        void HandleThreadStart(Tvl.VisualStudio.Language.Java.JvmEventsService.JvmVirtualMachineRemoteHandle virtualMachine, Tvl.VisualStudio.Language.Java.JvmEventsService.JvmThreadRemoteHandle thread);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJvmEventsService/HandleThreadEnd", ReplyAction="http://tempuri.org/IJvmEventsService/HandleThreadEndResponse")]
        void HandleThreadEnd(Tvl.VisualStudio.Language.Java.JvmEventsService.JvmVirtualMachineRemoteHandle virtualMachine, Tvl.VisualStudio.Language.Java.JvmEventsService.JvmThreadRemoteHandle thread);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJvmEventsService/HandleClassLoad", ReplyAction="http://tempuri.org/IJvmEventsService/HandleClassLoadResponse")]
        void HandleClassLoad(Tvl.VisualStudio.Language.Java.JvmEventsService.JvmVirtualMachineRemoteHandle virtualMachine, Tvl.VisualStudio.Language.Java.JvmEventsService.JvmThreadRemoteHandle thread, Tvl.VisualStudio.Language.Java.JvmEventsService.JvmClassRemoteHandle @class);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJvmEventsService/HandleClassPrepare", ReplyAction="http://tempuri.org/IJvmEventsService/HandleClassPrepareResponse")]
        void HandleClassPrepare(Tvl.VisualStudio.Language.Java.JvmEventsService.JvmVirtualMachineRemoteHandle virtualMachine, Tvl.VisualStudio.Language.Java.JvmEventsService.JvmThreadRemoteHandle thread, Tvl.VisualStudio.Language.Java.JvmEventsService.JvmClassRemoteHandle @class);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJvmEventsServiceChannel : Tvl.VisualStudio.Language.Java.JvmEventsService.IJvmEventsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JvmEventsServiceClient : System.ServiceModel.DuplexClientBase<Tvl.VisualStudio.Language.Java.JvmEventsService.IJvmEventsService>, Tvl.VisualStudio.Language.Java.JvmEventsService.IJvmEventsService {
        
        public JvmEventsServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public JvmEventsServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public JvmEventsServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public JvmEventsServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public JvmEventsServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Subscribe(Tvl.VisualStudio.Language.Java.JvmEventsService.JvmEventType eventType) {
            base.Channel.Subscribe(eventType);
        }
        
        public void Unsubscribe(Tvl.VisualStudio.Language.Java.JvmEventsService.JvmEventType eventType) {
            base.Channel.Unsubscribe(eventType);
        }
    }
}
