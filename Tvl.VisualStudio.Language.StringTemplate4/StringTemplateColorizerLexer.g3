lexer grammar StringTemplateColorizerLexer;

options {
    language=CSharp3;
    TokenLabelType=CommonToken;
}

@header
{
using Antlr4.StringTemplate.Compiler;
using Antlr4.StringTemplate.Misc;
}
@namespace{Tvl.VisualStudio.Language.StringTemplate4}

LPAREN : '(';
RPAREN : ')';
COMMA : ',';
DOT : '.';
COLON : ':';
DEFINED : '::=';
EQUALS : '=';
AT : '@';
LBRACK : '[';
RBRACK : ']';

ID	:	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'_')*
	;

STRING
	:	'"'
		(	'\\' '"'
		|	'\\' ~'"'
		|	~('\\'|'"'|'\n')
		)*
		'"'
	;

BIGSTRING
	:	'<<'
		(	options {greedy=false;}
		:	'\\' '>'  // \> escape
		|	'\\' ~'>'
		|	~'\\'
		)*
        '>>'
	;

ANONYMOUS_TEMPLATE
	:	'{' {HandleAnonymousTemplate();}
		// don't match '}' here; our little {...} scanner loop matches it
		// to terminate.
	;

COMMENT
    :   '/*' .* '*/'
    ;

LINE_COMMENT
    :	'//' ~('\n'|'\r')*
    ;

WS
	:	(' '|'\t')*
	;

NEWLINE
	:	('\r'|'\n')* {Skip();}
	;

ANYCHAR
	:	.
	;
