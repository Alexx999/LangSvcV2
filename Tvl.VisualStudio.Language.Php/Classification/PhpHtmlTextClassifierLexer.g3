lexer grammar PhpHtmlTextClassifierLexer;

options {
	language=CSharp3;
	TokenLabelType=CommonToken;
	tokenVocab=PhpClassifierConstants;
}

@namespace{Tvl.VisualStudio.Language.Php.Classification}
@modifier{internal}
@ctorModifier{private}

HTML_CLOSE_TAG
	:	'>'
	;

HTML_START_CODE
	:	'<?php'
	;

HTML_END_CODE
	:	'?>'
	;

HTML_COMMENT
	:	'<!--' .* '-->'
	;

HTML_CDATA
	:	'<![CDATA[' .* ']]>'
	;

HTML_START_TAG
	:	{IsTagStart(input)}? => '<' ('/'|'!')?
	;

HTML_TEXT
	:	(	~('\r' | '\n' | '<' | '&')
		|	{!IsTagStart(input)}? => '<'
		)+
	;

HTML_CHAR_REF
	:	'&'
		(	// named character reference
			('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9')* ';'
		|	// decimal numeric character reference
			'#' '0'..'9'+ ';'
		|	// hexadecimal numeric character reference
			'#' ('x'|'X') ('0'..'9'|'a'..'f'|'A'..'F')+ ';'
		|	// stray ampersand...
			{$type = HTML_TEXT;}
		)
	;

NEWLINE
	:	'\r'? '\n'
	;

ANY_CHAR
	:	.
	;
